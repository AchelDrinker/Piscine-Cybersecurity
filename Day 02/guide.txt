ft_onion 

Esta es una guia rapida para mintar tu ft_onion, con los comandos esenciales para que el servidor corra en el menor tiempo posible. El proyecto lo explico en el apartado de guia la cual contiene informacion sobre tor y los servicios ocultos, ssh y nginx. 

Docker o VirtualBox 
Para mi gusto optaria por docker ya que consume menos recursos y ocupa menos espacio, 
ademas de que con docker puedes bajarte directamente una imagen de nginx. 
Primero instalariamos docker o lo iniciariamos, en los mac de la escuela 42 lo iniciariamos desde la terminal de la siguiente manera: 
$> /sgoinfre/shared/42toolbox/init_docker.sh 
O desde otro dispositivo iremos a Docker desktop 
Una vex instalado ya podriamos iniciar nuestro servidor con el siguiente comando en la terminal: 
$> docker run -it -p 4242:4242 -p 80:80 --name [nombre del contenedor] [imagen de docker] 
-it:  Nos deja hacer interactivo el contenedor desde la terminal.  
-p: Expone el puerto 4242 y 80, en este caso, desde el contenedor como los puerto 4242 y 80, vale con cualquieer otro puerto. 
--name: El nombre del contenedor. 
imagen: en este caso elegí debian pero puede ser nginx u otra imagen, se pullea directamente desde  Docker hub 
Para salir de este ejecutamos: 
$> exit                      
Para volver a iniciarlo ejecutamos en la terminal: 
$> docker start -i [nombre del contenedor] 

Instalacion de los paquetes 

Los paquetes mas importantes para este servidor son nginx, Openssh-server y tor, 
para la instalacion de estos lo hariamos con apt de la siguiente manera: 
Para Openssh-server 
$> apt install openssh-server 
Para nginx: 
$> apt install nginx 
Para tor:
$> apt install tor 
Tambien seria util instalar sudo para acceder a root desde ssh facilmente, y vim para modificar archivos comodamente. 
$> apt install sudo 
$> apt install vim 

Configuracion del Servidor

En la configuracion del servidor debemos entender que es tor, nginx y ssh. 
Para empezar nuestra configuracion crearemos un usuario y lo meteremos en el grupo sudo: 
$> adduser user1 
$> usermod -aG sudo user1 
Esto nos servira luego cuando  nos queramos conectar por ssh a nuestro servidor. 
Seguiremos configurando ssh, para conectarnos a nnuestro servidor desde el puerto 4242. 
$> cd /etc/ssh 
$> vim sshd_config 
Ahi descomentaremos la siguiente linea para que podamos conectarnos desde el puerto 4242. 
#Port 22 
Y cambiaremos el puerto a 4242 
Port 4242 
Y para iniciar ssh: 
$> service ssh start 
Con esto podemos conectarnos con ssh a nnuestro servidor con el puerto 4242. 
Con ssh configurado nos iremos a nginx con el que alojaremos nuestro servidor web a traves de http. 
Para ello primero iremos a nginx.conf y descomentaremos la linea server_tokens of; 
$> cd /etc/nginx 
$> vim nginx.conf 
<-------------------->  
20 ~ server_tokens off; 
Esto nos proporcionara mas seguridad ocultando el baner del servidor. 
Luego nos iremos a /var/www/html y crearemos nuestro index.html la cual es la pagina que mostraremos. 
Para iniciar nuestro servidor en nginx escribimos:
$> service nginx start 
Y escribiendo la linea que se muestra a continuacion en la barra de nuestro buscador de preferencia nos conectariamos a nuestro servidor. 
http://localhost:80 
Por ultimo nos toca configurar tor que seria nuestro servicio oculto, 
para ello buscaremos el archivo torrc y lo modificaremos descomentando el puerto y la direccion. 
$> cd /etc/tor 
$> vim torrc 
<------------------->  
71 ~        HiddenServiceDir /var/lib/tor/hidden_service/ 
72 ~        HiddenServicePort 80 127.0.0.1:80 
Esto nos conectaria nuestro servicio oculto a traves del puerto 80 y nos guaardaria los datos en /var/lib/tor/hidden_service/ 
Y con esto ultimo terminariamos nuestra configuracion del servidor con el servicio oculto. 

Inicio de nuestro servidor 

Para iniciar nuestro servidor tendriamos que iniciar tor y conseguir el hostname que esta en /var/lib/tor/hidden_service/hostname. 
Para iniciartor escribimos: 
$> tor  
Desde una terminal desde ssh: 
----------------------------------- 
$> sudo su (nos pedira la contraseña del usuario) 
$> cd /var/lib/tor/hidden_service/ 
$> cat hostname 
Esto nos daria un hash con un .onion al final [xxxxxx...xxx.onion] y ese sera nuestro enlace de conexion en tor o en Brave tor. 
Asi tendriamos nuestro servidor terminado.







--------------------------FRANCAIS---------------------------------
ft_onion 

Voici un guide rapide pour minifier votre ft_onion, avec les commandes essentielles pour faire fonctionner le serveur dans les plus brefs délais. Le projet est expliqué dans la section guide qui contient des informations sur tor et les services cachés, ssh et nginx. 

Docker ou VirtualBox 
À mon goût, j'opterais pour Docker car il consomme moins de ressources et occupe moins d'espace, 
De plus, avec docker vous pouvez directement télécharger une image de nginx. 
Tout d'abord nous installerions docker ou nous le démarrerions, dans les macs de l'école 42 nous le démarrerions depuis le terminal de la manière suivante : 
$> /sgoinfre/shared/42toolbox/init_docker.sh 
Ou depuis un autre appareil, nous irons sur le bureau de Docker. 
Une fois installé, nous pouvons démarrer notre serveur avec la commande suivante dans le terminal : 
$> docker run -it -p 4242:4242 -p 80:80 --name [container name] [docker image] --name [container name] [docker image] [docker image] [docker image] [docker image] [docker image] [docker image] [docker image] [docker image 
-it : Rend le conteneur interactif depuis le terminal.  
-p : Exposer le port 4242 et 80, dans ce cas, à partir du conteneur en tant que port 4242 et 80, n'importe quel autre port fera l'affaire. 
--name : Le nom du conteneur. 
image : dans ce cas j'ai choisi debian mais cela peut être nginx ou une autre image, elle est cliquée directement depuis le hub Docker. 
Pour sortir de ce processus, nous exécutons : 
$> exit                      
Pour le redémarrer on exécute dans le terminal : 
$> docker start -i [nom du conteneur]. 

Installation des paquets 

Les paquets les plus importants pour ce serveur sont nginx, Openssh-server et tor, 
Pour les installer, il faut utiliser apt comme suit : 
Pour Openssh-server 
$> apt install openssh-server 
Pour nginx : 
$> apt install nginx 
Pour tor :
$> apt install tor 
Il serait également utile d'installer sudo pour accéder à la racine depuis ssh facilement, et vim pour modifier les fichiers confortablement. 
$> apt install sudo 
$> apt install vim 

Configuration du serveur

Pour la configuration du serveur, nous devons comprendre ce que sont tor, nginx et ssh. 
Pour commencer notre configuration, nous allons créer un utilisateur et le placer dans le groupe sudo : 
$> adduser user user1 
$> usermod -aG sudo user1 
Ceci sera utile lorsque nous voudrons nous connecter via ssh à notre serveur. 
Nous allons continuer à configurer ssh, pour nous connecter à notre serveur à partir du port 4242. 
$> cd /etc/ssh 
$> vim sshd_config 
Nous allons décommenter la ligne suivante afin de pouvoir nous connecter à partir du port 4242. 
#Port 22 
Et changer le port en 4242 
Port 4242 
Et pour démarrer ssh : 
$> service ssh start 
Nous pouvons ainsi nous connecter en ssh à notre serveur sur le port 4242. 
Une fois ssh configuré, nous allons aller sur nginx avec lequel nous allons héberger notre serveur web via http. 
Pour ce faire, nous allons d'abord aller dans nginx.conf et décommenter la ligne server_tokens de ; 
$> cd /etc/nginx 
$> vim nginx.conf 
<-------------------->  
20 ~ server_tokens off ; 
Cela permet de cacher la bannière du serveur et d'améliorer la sécurité. 
Ensuite, nous irons dans /var/www/html et créerons notre index.html qui est la page que nous afficherons. 
Pour démarrer notre serveur dans nginx, nous écrivons :
$> service nginx start 
Et en tapant la ligne ci-dessous dans la barre de notre navigateur de préférence, nous nous connecterons à notre serveur. 
http://localhost:80 
Enfin, nous devons configurer tor qui sera notre service caché, 
Pour ce faire, nous allons chercher le fichier torrc et le modifier en décommentant le port et l'adresse. 
$> cd /etc/tor 
$> vim torrc 
<------------------->  
71 ~ HiddenServiceDir /var/lib/tor/hidden_service/ 
72 ~ HiddenServicePort 80 127.0.0.1.1:80 
Ceci connectera notre service caché à travers le port 80 et sauvegardera les données dans /var/lib/tor/hidden_service/. 
Nous terminons ainsi la configuration de notre serveur avec le service caché. 

Démarrer notre serveur 

Pour démarrer notre serveur, nous devons démarrer tor et obtenir le nom d'hôte qui se trouve dans /var/lib/tor/hidden_service/hostname. 
Pour démarrer tor, il faut taper 
$> tor  
Depuis un terminal en ssh : 
----------------------------------- 
$> sudo su (il nous demandera le mot de passe de l'utilisateur) 
$> cd /var/lib/tor/hidden_service/ 
$> cat hostname 
Cela nous donnera un hash avec un .onion à la fin [xxxxxx...xxx.onion] et ce sera notre lien de connexion dans tor ou Brave tor. 
Notre serveur est alors terminé.